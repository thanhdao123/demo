version: "3.7"

services:
  # traefik:
  #   image: traefik:1.7-alpine
  #   deploy:
  #     replicas: 1
  #   ports:
  #     - "80:80"
  #     - "8080:8080"
  #     - "443:443"
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #     - "./traefik/traefik.toml:/etc/traefik/traefik.toml"
  #   networks:
  #     - "verse"

  rabbit:
    image: "rabbitmq:3-management"
    deploy:
      replicas: 1
    ports:
      - "15672:15672"
    hostname: "rabbitmq"
    environment:
      RABBITMQ_ERLANG_COOKIE: "H1hK3rDP1qySM7UH"
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
      RABBITMQ_DEFAULT_VHOST: "/"
    networks:
      - "verse"

  mongodb:
    image: mongo
    deploy:
      replicas: 1
    ports:
      - "27017:27017"
    environment:
      - "MONGO_INITDB_ROOT_USERNAME_FILE=/run/secrets/mongo_username"
      - "MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/mongo_password"
      - "MONGO_INITDB_DATABASE=admin"
    secrets:
      - "mongo_username"
      - "mongo_password"
    volumes:
      - "mongo-data:/data/db"
    networks:
      - "verse"

  web:
    image: daongocthanh/demo-web
    ports:
      - "3000:3000"
    deploy:
      replicas: 1
    environment:
      - "REACT_APP_APOLLO_HTTP_URI=http://104.199.129.145:8000/graphql"
      - "REACT_APP_APOLLO_WS_URI=ws//104.199.129.145:8000/graphql"
    networks:
      - "verse"

  server-graphql:
    image: daongocthanh/demo-server-graphql
    ports:
      - "8000:8000"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    environment:
      - "SERVER_PORT=8000"
      - "RABBIT_HOSTNAME=rabbit"
      - "RABBIT_PORT=5672"
      - "MONGO_HOST=mongodb"
      - "MONGO_PORT=27017"
      - "MONGO_DATABASE=admin"
    secrets:
      - "mongo_username"
      - "mongo_password"
      - "rabbit_username"
      - "rabbit_password"
    networks:
      - "verse"

  # server-rest:
  #   image: daongocthanh/demo-server-rest
  #   ports:
  #     - "4000:4000"
  #   deploy:
  #     replicas: 1
  #     restart_policy:
  #       condition: on-failure
  #       delay: 4s
  #       max_attempts: 3
  #   networks:
  #     - "verse"
  # worker:
  #   image: daongocthanh/demo-worker
  #   build: worker
  #   deploy:
  #     replicas: 1
  #   networks:
  #     - "verse"
secrets:
  rabbit_username:
    file: secrets/rabbit_username.txt
  rabbit_password:
    file: secrets/rabbit_password.txt
  mongo_username:
    file: secrets/mongo_username.txt
  mongo_password:
    file: secrets/mongo_password.txt

volumes:
  mongo-data:

networks:
  verse:
    driver: overlay
